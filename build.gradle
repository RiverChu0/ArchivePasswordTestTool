// 此项必须在plugins之前
buildscript {

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'io.github.fvarrui:javapackager:1.6.6'
    }
}

plugins {
    id 'java'
}

group 'icu.whereis'
version '0.0.1-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    maven { url 'https://jitpack.io'}
    mavenCentral()
}

dependencies {
    implementation group: 'com.alibaba', name: 'fastjson', version: '1.2.80'
    implementation group: 'commons-io', name: 'commons-io', version: '2.11.0'
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.12.0'
    implementation group: 'org.apache.commons', name: 'commons-configuration2', version: '2.7'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.17.2'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.17.2'
    implementation group: 'org.springframework', name: 'spring-core', version: '5.3.19'
    testImplementation group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: '2.17.2'
    implementation group: 'org.apache.commons', name: 'commons-compress', version: '1.21'
    implementation group: 'org.tukaani', name: 'xz', version: '1.9'
    implementation group: 'org.apache.tika', name: 'tika-core', version: '2.3.0'
    implementation group: 'net.lingala.zip4j', name: 'zip4j', version: '2.10.0'
    implementation group: 'com.formdev', name: 'flatlaf', version: '2.2'
    implementation group: 'com.miglayout', name: 'miglayout-swing', version: '5.3'
    //implementation group: 'com.weblookandfeel', name: 'weblaf-ui', version: '1.2.13'
}

apply plugin: 'io.github.fvarrui.javapackager.plugin'

task packageMyApp(type: io.github.fvarrui.javapackager.gradle.PackageTask, dependsOn: build) {

    // mandatory
    mainClass = 'icu.whereis.ap.Main'
    // optional
    bundleJre = true
    //assetsDir = file('src/main/resources/icon')
    jrePath = file('D:/soft/work/Java/jre1.8.0_201')
    generateInstaller = true
    administratorRequired = false
    platform = 'auto'
    version = '0.0.1'
    //additionalResources = [ file('') ]
    linuxConfig {

    }
    macConfig {

    }
    winConfig {
        icoFile = file('src/main/resources/icon/ArchivePasswordTestTool.ico')
        wrapJar = true
        generateSetup = true
        generateMsi = true
        removeOldLibs = true
        setupMode = 'askTheUser'
        setupLanguages = [
            english : 'compiler:Default.isl',
            japanese : 'compiler:Languages\\Japanese.isl',
            german : 'compiler:Languages\\German.isl'
        ]
        // 是否允许自定义安装路径
        disableDirPage = false
    }

}

jar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    manifest {
        attributes "Manifest-Version": 1.0,
                'Main-Class': 'icu.whereis.ap.Main'
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}


